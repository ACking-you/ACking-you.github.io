<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>深入Linux内核 - 分类 - L_B__</title>
        <link>https://acking-you.github.io/categories/%E6%B7%B1%E5%85%A5linux%E5%86%85%E6%A0%B8/</link>
        <description>深入Linux内核 - 分类 - L_B__</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Sat, 27 May 2023 00:00:00 &#43;0000</lastBuildDate><atom:link href="https://acking-you.github.io/categories/%E6%B7%B1%E5%85%A5linux%E5%86%85%E6%A0%B8/" rel="self" type="application/rss+xml" /><item>
    <title>[内核源码]epoll实现原理</title>
    <link>https://acking-you.github.io/posts/%E5%86%85%E6%A0%B8%E6%BA%90%E7%A0%81epoll%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86/</link>
    <pubDate>Sat, 27 May 2023 00:00:00 &#43;0000</pubDate><guid>https://acking-you.github.io/posts/%E5%86%85%E6%A0%B8%E6%BA%90%E7%A0%81epoll%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="https://img-blog.csdnimg.cn/img_convert/687db1a327b1ff978e25faf116abe71a.png#pic_center" referrerpolicy="no-referrer">
            </div>文章主要对 tcp 通信进行 epoll 源码走读。 引发我对 epoll 源码感兴趣的原因在于知乎上的一个提问，ET和LT模式在源码中到底怎么实现的 Linux 源码：Linux 5.7 版本]]></description>
</item>
<item>
    <title>Linux进程、线程文件、描述符的底层原理</title>
    <link>https://acking-you.github.io/posts/linux%E8%BF%9B%E7%A8%8B%E7%BA%BF%E7%A8%8B%E6%96%87%E4%BB%B6%E6%8F%8F%E8%BF%B0%E7%AC%A6%E7%9A%84%E5%BA%95%E5%B1%82%E5%8E%9F%E7%90%86/</link>
    <pubDate>Sat, 27 May 2023 00:00:00 &#43;0000</pubDate><guid>https://acking-you.github.io/posts/linux%E8%BF%9B%E7%A8%8B%E7%BA%BF%E7%A8%8B%E6%96%87%E4%BB%B6%E6%8F%8F%E8%BF%B0%E7%AC%A6%E7%9A%84%E5%BA%95%E5%B1%82%E5%8E%9F%E7%90%86/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="https://img-blog.csdnimg.cn/img_convert/1d3bc0dca5a88ba6649ae7b1041e8cf5.png#pic_center" referrerpolicy="no-referrer">
            </div>说到进程，恐怕面试中最常见的问题就是线程和进程的关系了，那么先说一下答案：在 Linux 系统中，进程和线程几乎没有区别。 Linux 中的进程就是一个数据结构，看]]></description>
</item>
</channel>
</rss>
