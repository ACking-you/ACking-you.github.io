<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>算法——最短路问题 - 分类 - L_B__</title>
        <link>https://acking-you.gitee.io/categories/%E7%AE%97%E6%B3%95%E6%9C%80%E7%9F%AD%E8%B7%AF%E9%97%AE%E9%A2%98/</link>
        <description>算法——最短路问题 - 分类 - L_B__</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Mon, 07 Feb 2022 00:00:00 &#43;0000</lastBuildDate><atom:link href="https://acking-you.gitee.io/categories/%E7%AE%97%E6%B3%95%E6%9C%80%E7%9F%AD%E8%B7%AF%E9%97%AE%E9%A2%98/" rel="self" type="application/rss+xml" /><item>
    <title>BellmanFord和SPFA算法详解</title>
    <link>https://acking-you.gitee.io/posts/bellmanford%E5%92%8Cspfa%E7%AE%97%E6%B3%95%E8%AF%A6%E8%A7%A3/</link>
    <pubDate>Mon, 07 Feb 2022 00:00:00 &#43;0000</pubDate><guid>https://acking-you.gitee.io/posts/bellmanford%E5%92%8Cspfa%E7%AE%97%E6%B3%95%E8%AF%A6%E8%A7%A3/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="https://s4.ax1x.com/2022/01/22/7hfFu8.png" referrerpolicy="no-referrer">
            </div>*关于Bellman ford和SPFA算法的详解 我是白嫖的leetcode会员，然后看了关于图单源最短路径的讲解，讲解的非常好(虽然没代码演]]></description>
</item>
<item>
    <title>Dijkstra算法模板讲解</title>
    <link>https://acking-you.gitee.io/posts/dijkstra%E7%AE%97%E6%B3%95%E6%A8%A1%E6%9D%BF%E8%AE%B2%E8%A7%A3/</link>
    <pubDate>Mon, 07 Feb 2022 00:00:00 &#43;0000</pubDate><guid>https://acking-you.gitee.io/posts/dijkstra%E7%AE%97%E6%B3%95%E6%A8%A1%E6%9D%BF%E8%AE%B2%E8%A7%A3/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="https://w.wallhaven.cc/full/j3/wallhaven-j3l2gw.jpg" referrerpolicy="no-referrer">
            </div>(也就5min)先点开链接把Dijkstra算法过程看一看(否则肯定看不懂代码). 视频详解Dijkstra算法过程 此方法最短路径的适用范围：]]></description>
</item>
</channel>
</rss>
