<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>算法——滑动窗口 - 分类 - L_B__</title>
        <link>https://acking-you.github.io/categories/%E7%AE%97%E6%B3%95%E6%BB%91%E5%8A%A8%E7%AA%97%E5%8F%A3/</link>
        <description>算法——滑动窗口 - 分类 - L_B__</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Sun, 04 Jun 2023 00:00:00 &#43;0000</lastBuildDate><atom:link href="https://acking-you.github.io/categories/%E7%AE%97%E6%B3%95%E6%BB%91%E5%8A%A8%E7%AA%97%E5%8F%A3/" rel="self" type="application/rss+xml" /><item>
    <title>使用Rabin-Karp算法替代KMP</title>
    <link>https://acking-you.github.io/posts/%E4%BD%BF%E7%94%A8rabin-karp%E7%AE%97%E6%B3%95%E6%9B%BF%E4%BB%A3kmp/</link>
    <pubDate>Sun, 04 Jun 2023 00:00:00 &#43;0000</pubDate><guid>https://acking-you.github.io/posts/%E4%BD%BF%E7%94%A8rabin-karp%E7%AE%97%E6%B3%95%E6%9B%BF%E4%BB%A3kmp/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="https://img-blog.csdnimg.cn/img_convert/c2804a2e21ea79a0b060126b82a9145c.png#pic_center" referrerpolicy="no-referrer">
            </div>Rabin-Karp算法 Rabin-Karp算法是利用滑动窗口的方式来计算哈希值，并通过该哈希值直接进行比较来判断字符串是否匹配，也就是消减]]></description>
</item>
<item>
    <title>LCP68.美观的花束——sliding_window</title>
    <link>https://acking-you.github.io/posts/lcp68.%E7%BE%8E%E8%A7%82%E7%9A%84%E8%8A%B1%E6%9D%9Fsliding_window/</link>
    <pubDate>Fri, 07 Oct 2022 00:00:00 &#43;0000</pubDate><guid>https://acking-you.github.io/posts/lcp68.%E7%BE%8E%E8%A7%82%E7%9A%84%E8%8A%B1%E6%9D%9Fsliding_window/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="https://img-blog.csdnimg.cn/img_convert/c3d009d6542a44155b5847c3a9c76dcd.png#pic_center" referrerpolicy="no-referrer">
            </div>class Solution { public: const int mod = 1e9+7; int beautifulBouquet(vector&lt;int&gt;&amp; flowers, int cnt) { int n = flowers.size(); int ret = 0; int left = 0,right = 0; unordered_map&lt;int,int&gt; count; int option = 1; while(right &lt;= n){ if(option == 1){ //right指针向右边滑动，更新窗口上限 if(right == n){ option = 2; continue ;]]></description>
</item>
</channel>
</rss>
