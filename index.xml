<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>L_B__</title>
        <link>https://acking-you.gitee.io/</link>
        <description>专注记笔记</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Fri, 25 Nov 2022 00:00:00 &#43;0000</lastBuildDate>
            <atom:link href="https://acking-you.gitee.io/index.xml" rel="self" type="application/rss+xml" />
        <item>
    <title>C&#43;&#43;编译期反射——以AOP为例</title>
    <link>https://acking-you.gitee.io/posts/c&#43;&#43;%E7%BC%96%E8%AF%91%E6%9C%9F%E5%8F%8D%E5%B0%84%E4%BB%A5aop%E4%B8%BA%E4%BE%8B/</link>
    <pubDate>Fri, 25 Nov 2022 00:00:00 &#43;0000</pubDate><guid>https://acking-you.gitee.io/posts/c&#43;&#43;%E7%BC%96%E8%AF%91%E6%9C%9F%E5%8F%8D%E5%B0%84%E4%BB%A5aop%E4%B8%BA%E4%BE%8B/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="https://img-blog.csdnimg.cn/img_convert/7213ded01d686aab797968b2a6064358.png#pic_center" referrerpolicy="no-referrer">
            </div>编译期反射实践 自古以来，C++就一直缺少一个编程语言的重要特性——反射，但如果熟悉C++元模板编程的同学，就知道以C++的风格，肯定是不会在]]></description>
</item>
<item>
    <title>go语言业务代码一键逆向生成</title>
    <link>https://acking-you.gitee.io/posts/go%E4%B8%9A%E5%8A%A1%E4%BB%A3%E7%A0%81%E4%B8%80%E9%94%AE%E9%80%86%E5%90%91%E7%94%9F%E6%88%90/</link>
    <pubDate>Fri, 18 Nov 2022 00:00:00 &#43;0000</pubDate><guid>https://acking-you.gitee.io/posts/go%E4%B8%9A%E5%8A%A1%E4%BB%A3%E7%A0%81%E4%B8%80%E9%94%AE%E9%80%86%E5%90%91%E7%94%9F%E6%88%90/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="https://img-blog.csdnimg.cn/img_convert/acea126d07748d6630f37b1b481e5d73.png#pic_center" referrerpolicy="no-referrer">
            </div>go_project_quickstart 快速开始 要求 Go 1.18 及以上版本 安装 1.下载并安装 gin： go get -u github.com/ACking-you/quickstart_project 2.将 gin 引入到代码中： import &quot;github.com/ACking-you/quickstart_project&quot; 3.一键根据数据库快速逆向生成所有业务代码： import ( &#34;github.com/ACking-you/quickstart_project&#34; &#34;github.com/ACking-you/quickstart_project/util&#34;]]></description>
</item>
<item>
    <title>[CS原理]多级页表到底如何节约内存？</title>
    <link>https://acking-you.gitee.io/posts/cs%E5%8E%9F%E7%90%86%E5%A4%9A%E7%BA%A7%E9%A1%B5%E8%A1%A8%E5%88%B0%E5%BA%95%E5%A6%82%E4%BD%95%E8%8A%82%E7%BA%A6%E5%86%85%E5%AD%98/</link>
    <pubDate>Fri, 07 Oct 2022 00:00:00 &#43;0000</pubDate><guid>https://acking-you.gitee.io/posts/cs%E5%8E%9F%E7%90%86%E5%A4%9A%E7%BA%A7%E9%A1%B5%E8%A1%A8%E5%88%B0%E5%BA%95%E5%A6%82%E4%BD%95%E8%8A%82%E7%BA%A6%E5%86%85%E5%AD%98/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="https://img-blog.csdnimg.cn/img_convert/385f4cc39feda8590ef42f86b38207ba.png#pic_center" referrerpolicy="no-referrer">
            </div>前言 在学习计算机组成原理时，书中谈到，&ldquo;使用多级页表可以压缩页表占用的内存&rdquo;，在了解了多级页表的原理后，恐怕对这句话]]></description>
</item>
<item>
    <title>LCP68.美观的花束——sliding_window</title>
    <link>https://acking-you.gitee.io/posts/lcp68.%E7%BE%8E%E8%A7%82%E7%9A%84%E8%8A%B1%E6%9D%9Fsliding_window/</link>
    <pubDate>Fri, 07 Oct 2022 00:00:00 &#43;0000</pubDate><guid>https://acking-you.gitee.io/posts/lcp68.%E7%BE%8E%E8%A7%82%E7%9A%84%E8%8A%B1%E6%9D%9Fsliding_window/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="https://img-blog.csdnimg.cn/img_convert/c3d009d6542a44155b5847c3a9c76dcd.png#pic_center" referrerpolicy="no-referrer">
            </div>class Solution { public: const int mod = 1e9+7; int beautifulBouquet(vector&lt;int&gt;&amp; flowers, int cnt) { int n = flowers.size(); int ret = 0; int left = 0,right = 0; unordered_map&lt;int,int&gt; count; int option = 1; while(right &lt;= n){ if(option == 1){ //right指针向右边滑动，更新窗口上限 if(right == n){ option = 2; continue ;]]></description>
</item>
<item>
    <title>C&#43;&#43;高易用日志库实现</title>
    <link>https://acking-you.gitee.io/posts/c&#43;&#43;%E9%AB%98%E6%98%93%E7%94%A8%E6%97%A5%E5%BF%97%E5%BA%93%E5%AE%9E%E7%8E%B0/</link>
    <pubDate>Mon, 05 Sep 2022 00:00:00 &#43;0000</pubDate><guid>https://acking-you.gitee.io/posts/c&#43;&#43;%E9%AB%98%E6%98%93%E7%94%A8%E6%97%A5%E5%BF%97%E5%BA%93%E5%AE%9E%E7%8E%B0/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="https://img-blog.csdnimg.cn/img_convert/1d3bc0dca5a88ba6649ae7b1041e8cf5.png#pic_center" referrerpolicy="no-referrer">
            </div>使用教程 如何添加到项目中使用 输入以下命令得到项目文件 git clone https://github.com/ACking-you/my-logger.git 项目目录如下： dependencies：整个项目的外部依赖，以源码形式存在（比如f]]></description>
</item>
<item>
    <title>驾考软件实现文档</title>
    <link>https://acking-you.gitee.io/posts/%E9%A9%BE%E8%80%83%E8%BD%AF%E4%BB%B6%E5%AE%9E%E7%8E%B0%E6%96%87%E6%A1%A3/</link>
    <pubDate>Mon, 05 Sep 2022 00:00:00 &#43;0000</pubDate><guid>https://acking-you.gitee.io/posts/%E9%A9%BE%E8%80%83%E8%BD%AF%E4%BB%B6%E5%AE%9E%E7%8E%B0%E6%96%87%E6%A1%A3/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="https://img-blog.csdnimg.cn/img_convert/e706274b97f65b3aac9471d1da024918.png#pic_center" referrerpolicy="no-referrer">
            </div>整体架构 1.软件后台架构 采用标准的三层架构： Models层用于底层获取数据和对应的序列化过程 Service层用于包装数据提供接口 Contro]]></description>
</item>
<item>
    <title>细粒度锁线程安全队列实现</title>
    <link>https://acking-you.gitee.io/posts/%E7%BB%86%E7%B2%92%E5%BA%A6%E9%94%81%E7%BA%BF%E7%A8%8B%E5%AE%89%E5%85%A8%E9%98%9F%E5%88%97%E5%AE%9E%E7%8E%B0/</link>
    <pubDate>Sat, 20 Aug 2022 00:00:00 &#43;0000</pubDate><guid>https://acking-you.gitee.io/posts/%E7%BB%86%E7%B2%92%E5%BA%A6%E9%94%81%E7%BA%BF%E7%A8%8B%E5%AE%89%E5%85%A8%E9%98%9F%E5%88%97%E5%AE%9E%E7%8E%B0/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="https://img-blog.csdnimg.cn/img_convert/c644e86b92d93fcc4173c23ce127e625.png#pic_center" referrerpolicy="no-referrer">
            </div>包含同步语义的简单实现 template &lt;typename T&gt; class ThreadSafeQueue { public: void Push(T new_value) { std::lock_guard&lt;std::mutex&gt; lk(m_mtx); m_queue.push(std::move(new_value)); m_cond.notify_one(); // 1 } void WaitAndPop(T &amp;value) // 2 { std::unique_lock&lt;std::mutex&gt; lk(m_mtx); m_cond.wait(lk, [this] { return !m_queue.empty(); }); value = std::move(m_queue.front()); m_queue.pop(); } std::shared_ptr&lt;T&gt; WaitAndPop() // 3 { std::unique_lock&lt;std::mutex&gt; lk(m_mtx); m_cond.wait(lk, [this] { return !m_queue.empty(); }); // 4 std::shared_ptr&lt;T&gt; res( std::make_shared&lt;T&gt;(std::move(m_queue.front()))); m_queue.pop(); return res; }]]></description>
</item>
<item>
    <title>async、packaged_task、promise、future的区别与使用</title>
    <link>https://acking-you.gitee.io/posts/asyncpackage_task%E7%9A%84%E5%8C%BA%E5%88%AB%E4%B8%8E%E4%BD%BF%E7%94%A8/</link>
    <pubDate>Wed, 17 Aug 2022 00:00:00 &#43;0000</pubDate><guid>https://acking-you.gitee.io/posts/asyncpackage_task%E7%9A%84%E5%8C%BA%E5%88%AB%E4%B8%8E%E4%BD%BF%E7%94%A8/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="https://img-blog.csdnimg.cn/img_convert/c592952aec4e1c875073f2a3d970cde5.png#pic_center" referrerpolicy="no-referrer">
            </div>使用方法 想要更详尽的介绍可以看看这本书，这几个函数牵扯到的内容是并发操作的同步，对应《C++并发编程实战》的第四章，这本书很难啃，有很多地方]]></description>
</item>
<item>
    <title>C&#43;&#43;面试面试一条龙</title>
    <link>https://acking-you.gitee.io/posts/c&#43;&#43;%E9%9D%A2%E8%AF%95%E4%B8%80%E6%9D%A1%E8%B7%AF/</link>
    <pubDate>Fri, 05 Aug 2022 00:00:00 &#43;0000</pubDate><guid>https://acking-you.gitee.io/posts/c&#43;&#43;%E9%9D%A2%E8%AF%95%E4%B8%80%E6%9D%A1%E8%B7%AF/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="https://img-blog.csdnimg.cn/img_convert/30474f138a1fd099890cfcb17099a60b.png#pic_center" referrerpolicy="no-referrer">
            </div>面试题的学习（八股文 cpp面试题1 cpp面试题2 面向企业刷题的刷题网站 计算机系统和计算机网络视频学习 计算机系统 准备面试用 深入学习用 计算机网络]]></description>
</item>
<item>
    <title>JSON解析器实现</title>
    <link>https://acking-you.gitee.io/posts/json%E8%A7%A3%E6%9E%90%E5%99%A8%E5%AE%9E%E7%8E%B0/</link>
    <pubDate>Wed, 27 Jul 2022 00:00:00 &#43;0000</pubDate><guid>https://acking-you.gitee.io/posts/json%E8%A7%A3%E6%9E%90%E5%99%A8%E5%AE%9E%E7%8E%B0/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="https://img-blog.csdnimg.cn/img_convert/c2804a2e21ea79a0b060126b82a9145c.png#pic_center" referrerpolicy="no-referrer">
            </div>代码开源仓库：cpp造轮子项目&ndash;实现json解析器 JSON格式介绍 JSON(JavaScript Object Notation)，是一种序列化的格式，最大的优点在于可读]]></description>
</item>
</channel>
</rss>
