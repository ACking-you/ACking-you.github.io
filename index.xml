<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>L_B__</title>
        <link>https://acking-you.github.io/</link>
        <description>专注记笔记</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Thu, 13 Apr 2023 00:00:00 &#43;0000</lastBuildDate>
            <atom:link href="https://acking-you.github.io/index.xml" rel="self" type="application/rss+xml" />
        <item>
    <title>lab0-实现ByteStream</title>
    <link>https://acking-you.github.io/posts/lab0-%E5%AE%9E%E7%8E%B0bytestream/</link>
    <pubDate>Thu, 13 Apr 2023 00:00:00 &#43;0000</pubDate><guid>https://acking-you.github.io/posts/lab0-%E5%AE%9E%E7%8E%B0bytestream/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="https://img-blog.csdnimg.cn/img_convert/f58e3cdfd042ae0db6a192022d83a1ac.png#pic_center" referrerpolicy="no-referrer">
            </div>CS144 lab0 lab0具体的相关事宜可以查看博客:https://kiprey.github.io/2021/11/cs144-lab0/ 完整项目代码]]></description>
</item>
<item>
    <title>lab1-实现StreamReassembler</title>
    <link>https://acking-you.github.io/posts/lab1-%E5%AE%9E%E7%8E%B0streamreassembler/</link>
    <pubDate>Thu, 13 Apr 2023 00:00:00 &#43;0000</pubDate><guid>https://acking-you.github.io/posts/lab1-%E5%AE%9E%E7%8E%B0streamreassembler/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="https://img-blog.csdnimg.cn/img_convert/9c7b214855b7ea22ad8549a1afb50fc7.png#pic_center" referrerpolicy="no-referrer">
            </div>CS144 lab1 lab1具体的相关事宜可以查看博客:https://kiprey.github.io/2021/11/cs144-lab1/ 完整项目代码]]></description>
</item>
<item>
    <title>TcpConnectionImpl如何高效且统一处理IO事件</title>
    <link>https://acking-you.github.io/posts/tcpconnectionimpl%E5%A6%82%E4%BD%95%E9%AB%98%E6%95%88%E4%B8%94%E7%BB%9F%E4%B8%80%E5%A4%84%E7%90%86io%E4%BA%8B%E4%BB%B6/</link>
    <pubDate>Wed, 12 Apr 2023 00:00:00 &#43;0000</pubDate><guid>https://acking-you.github.io/posts/tcpconnectionimpl%E5%A6%82%E4%BD%95%E9%AB%98%E6%95%88%E4%B8%94%E7%BB%9F%E4%B8%80%E5%A4%84%E7%90%86io%E4%BA%8B%E4%BB%B6/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="https://img-blog.csdnimg.cn/img_convert/c592952aec4e1c875073f2a3d970cde5.png#pic_center" referrerpolicy="no-referrer">
            </div>TcpConnectionImpl如何高效且统一处理IO事件]]></description>
</item>
<item>
    <title>实现高性能时间轮用于踢出空闲连接</title>
    <link>https://acking-you.github.io/posts/%E5%AE%9E%E7%8E%B0%E9%AB%98%E6%80%A7%E8%83%BD%E6%97%B6%E9%97%B4%E8%BD%AE%E7%94%A8%E4%BA%8E%E8%B8%A2%E5%87%BA%E7%A9%BA%E9%97%B2%E8%BF%9E%E6%8E%A5/</link>
    <pubDate>Sat, 25 Feb 2023 00:00:00 &#43;0000</pubDate><guid>https://acking-you.github.io/posts/%E5%AE%9E%E7%8E%B0%E9%AB%98%E6%80%A7%E8%83%BD%E6%97%B6%E9%97%B4%E8%BD%AE%E7%94%A8%E4%BA%8E%E8%B8%A2%E5%87%BA%E7%A9%BA%E9%97%B2%E8%BF%9E%E6%8E%A5/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="https://img-blog.csdnimg.cn/img_convert/2729ae8b8d3a403affb81167fb3b1604.png#pic_center" referrerpolicy="no-referrer">
            </div>完整代码实现： netpoll/net/inner/timing_wheel.h netpoll/net/inner/timing_wheel.cc 实现契机 在网络框架的设计中,有一个环节是踢出空闲的连接,但是我觉得这个过程并不是一个很紧急的过程,有没有一种可以损失定时任]]></description>
</item>
<item>
    <title>elog4cpp官方文档</title>
    <link>https://acking-you.github.io/posts/elog4cpp%E5%AE%98%E6%96%B9%E6%96%87%E6%A1%A3/</link>
    <pubDate>Mon, 13 Feb 2023 00:00:00 &#43;0000</pubDate><guid>https://acking-you.github.io/posts/elog4cpp%E5%AE%98%E6%96%B9%E6%96%87%E6%A1%A3/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="https://img-blog.csdnimg.cn/img_convert/30474f138a1fd099890cfcb17099a60b.png#pic_center" referrerpolicy="no-referrer">
            </div>代码仓库：https://github.com/ACking-you/elog4cpp elog4cpp ：意味着这是一个使用上非常 easy，同时性能上也非常]]></description>
</item>
<item>
    <title>C&#43;&#43;工程实践必备：测试、基准测试、覆盖测试、性能分析、内存泄漏检测</title>
    <link>https://acking-you.github.io/posts/c&#43;&#43;%E5%B7%A5%E7%A8%8B%E5%AE%9E%E8%B7%B5%E5%BF%85%E5%A4%87%E6%B5%8B%E8%AF%95%E5%9F%BA%E5%87%86%E6%B5%8B%E8%AF%95%E8%A6%86%E7%9B%96%E6%B5%8B%E8%AF%95%E6%80%A7%E8%83%BD%E5%88%86%E6%9E%90%E5%86%85%E5%AD%98%E6%B3%84%E6%BC%8F%E6%A3%80%E6%B5%8B/</link>
    <pubDate>Fri, 27 Jan 2023 00:00:00 &#43;0000</pubDate><guid>https://acking-you.github.io/posts/c&#43;&#43;%E5%B7%A5%E7%A8%8B%E5%AE%9E%E8%B7%B5%E5%BF%85%E5%A4%87%E6%B5%8B%E8%AF%95%E5%9F%BA%E5%87%86%E6%B5%8B%E8%AF%95%E8%A6%86%E7%9B%96%E6%B5%8B%E8%AF%95%E6%80%A7%E8%83%BD%E5%88%86%E6%9E%90%E5%86%85%E5%AD%98%E6%B3%84%E6%BC%8F%E6%A3%80%E6%B5%8B/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="https://img-blog.csdnimg.cn/aa6bde4ddb8d4ddda947454fb8656ba3.png" referrerpolicy="no-referrer">
            </div>单元测试框架 google test是一个C++中常用且历史悠久的测试框架，其他类似且较新的测试框架有 catch2 或 doetest等，这两个测试框架的优势在于引入简]]></description>
</item>
<item>
    <title>ejson4cpp使用文档</title>
    <link>https://acking-you.github.io/posts/ejson4cpp%E4%BD%BF%E7%94%A8%E6%96%87%E6%A1%A3/</link>
    <pubDate>Tue, 17 Jan 2023 00:00:00 &#43;0000</pubDate><guid>https://acking-you.github.io/posts/ejson4cpp%E4%BD%BF%E7%94%A8%E6%96%87%E6%A1%A3/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="https://img-blog.csdnimg.cn/2fe50a8ccac142f6b744b88999d0dc6c.png" referrerpolicy="no-referrer">
            </div>代码仓库：https://github.com/ACking-you/ejson4cpp ejosn4cpp ：意味着这是一个使用上非常 easy，同时性能上也非]]></description>
</item>
<item>
    <title>CLion开发环境配置完全解析</title>
    <link>https://acking-you.github.io/posts/clion%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE%E5%AE%8C%E5%85%A8%E8%A7%A3%E6%9E%90/</link>
    <pubDate>Thu, 29 Dec 2022 00:00:00 &#43;0000</pubDate><guid>https://acking-you.github.io/posts/clion%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE%E5%AE%8C%E5%85%A8%E8%A7%A3%E6%9E%90/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="https://img-blog.csdnimg.cn/img_convert/c2804a2e21ea79a0b060126b82a9145c.png#pic_center" referrerpolicy="no-referrer">
            </div>下载与安装 关于CLion的安装我推荐安装最新的CLion 2022.3之后的版本，因为从这个版本后性能提升了很多，而且还增加了对cmake代码]]></description>
</item>
<item>
    <title>chatgpt教我内存对齐，对齐了但没完全对齐？</title>
    <link>https://acking-you.github.io/posts/chatgp%E6%95%99%E6%88%91%E5%86%85%E5%AD%98%E5%AF%B9%E9%BD%90/</link>
    <pubDate>Mon, 19 Dec 2022 00:00:00 &#43;0000</pubDate><guid>https://acking-you.github.io/posts/chatgp%E6%95%99%E6%88%91%E5%86%85%E5%AD%98%E5%AF%B9%E9%BD%90/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="https://img-blog.csdnimg.cn/img_convert/2729ae8b8d3a403affb81167fb3b1604.png#pic_center" referrerpolicy="no-referrer">
            </div>内存对齐 关于chatgpt的回答 我与chatgpt的对话如下： 我现在来描述与总结上述对话都干了啥以及我为什么要问这个。 我本来是在学习rapi]]></description>
</item>
<item>
    <title>关于并查集的一切</title>
    <link>https://acking-you.github.io/posts/%E5%85%B3%E4%BA%8E%E5%B9%B6%E6%9F%A5%E9%9B%86%E7%9A%84%E4%B8%80%E5%88%87/</link>
    <pubDate>Mon, 19 Dec 2022 00:00:00 &#43;0000</pubDate><guid>https://acking-you.github.io/posts/%E5%85%B3%E4%BA%8E%E5%B9%B6%E6%9F%A5%E9%9B%86%E7%9A%84%E4%B8%80%E5%88%87/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="https://img-blog.csdnimg.cn/img_convert/acea126d07748d6630f37b1b481e5d73.png#pic_center" referrerpolicy="no-referrer">
            </div>并查集初识 如果给你一些顶点，并且告诉你每个顶点的连接关系，你如何才能快速的找出两个顶点是否具有连通性呢？如「图 5. 连通性问题」，该图给出了顶点]]></description>
</item>
</channel>
</rss>
